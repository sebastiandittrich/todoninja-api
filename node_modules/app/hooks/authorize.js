const { associateCurrentUser, restrictToOwner, queryWithCurrentUser } = require('feathers-authentication-hooks')
const { method } = require('./helpers')

const globalUserConfig = { idField: 'id' }

module.exports = function(config = {}) {
  return async context => {
    const jobs = []
    const userConfig = Object.assign({}, globalUserConfig, config)

    if(['find'].includes(context.method)) {
      jobs.push( queryWithCurrentUser(userConfig) )
    }

    if(['get', 'update', 'patch', 'remove'].includes(context.method)) {
      jobs.push( restrictToOwner(userConfig) )
    }

    if(['create', 'update', 'patch'].includes(context.method)) {
      jobs.push( associateCurrentUser(userConfig) )
    }

    // Evaluate sequentially in the right order
    return jobs.reduce((promise, current) => promise.then(last => current(last)), Promise.resolve(context))

  }

}
