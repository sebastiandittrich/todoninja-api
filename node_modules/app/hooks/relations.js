module.exports = {

  hasMany(...propnames) {
    return async context => {

      if(context.method == 'delete') {
        return context
      }

      let result = []
      if(['create', 'update', 'patch'].includes(context.method)) {
        result = Array.isArray(context.data) ? context.data : [context.data]
      } else if(['find'].includes(context.method)) {
        result = context.result.data
      } else if(['get'].includes(context.method)) {
        result = [context.result]
      }
      console.log(result)
      console.log(context.result)

      await Promise.all(result.map(async item => {
        await Promise.all(propnames.map(async propname => {
          const associations = await context.service.Model.build(item)['get' + propname]({ attributes: [ 'id' ] })
          item[propname.toLowerCase()] = associations.map(otheritem => otheritem.id)
        }))
      }))

      return context

    }
  }

}
